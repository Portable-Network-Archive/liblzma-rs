name: CI
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
          - os: ubuntu-latest
            rust: stable
            static: yes
          - os: ubuntu-latest
            rust: beta
          - os: ubuntu-latest
            rust: nightly
          - os: macos-latest
            rust: stable
          - os: macos-latest
            rust: stable
            static: yes
          - os: windows-latest
            rust: stable-i686-msvc
          - os: windows-latest
            rust: stable-x86_64-msvc
          - os: windows-latest
            rust: stable-x86_64-msvc
            static: yes
          - os: windows-latest
            rust: stable-x86_64-msvc
            static: yes
            crt_static: yes
          # TODO: should figure out why this is failing
          # - os: windows-latest
          #   rust: stable-i686-gnu
          - os: windows-latest
            rust: stable-x86_64-gnu
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - name: Set crt-static
      if: matrix.crt_static == 'yes'
      run: echo RUSTFLAGS=-Ctarget-feature=+crt-static >> $GITHUB_ENV
      shell: bash
    - name: Set static
      if: matrix.static == 'yes'
      run: echo LZMA_API_STATIC=1 >> $GITHUB_ENV
      shell: bash
    - run: cargo test --no-default-features
    - run: cargo clean
    - run: cargo test --features tokio
    - run: cargo clean
    - run: cargo test --features threading
    - run: cargo clean
    - run: cargo test --features tokio threading
    - run: cargo run --manifest-path systest/Cargo.toml
      if: matrix.static == 'yes'


  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - run: cargo fmt -- --check
